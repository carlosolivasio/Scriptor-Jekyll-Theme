<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Naughtyb0y's Blog</title>
        <description>This blog is maintained by a student of IIT(ISM) Dhanbad</description>
        <link>http://localhost:4000/</link>
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Sun, 05 Apr 2020 17:30:04 +0530</pubDate>
        <lastBuildDate>Sun, 05 Apr 2020 17:30:04 +0530</lastBuildDate>
        <generator>Jekyll v4.0.0</generator>
        
            <item>
                <title>Try Hackme Vulnversity Walkthrough</title>
                <description>&lt;!--more--&gt;
&lt;p&gt;Lets start with the basic nmap scan&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This showed that there were 6 ports open on the machine 
ftp was useless as anon login was not allowed 
so the only option was the http website
lets visit the website on port on 3333&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This also does not give us anything useful so lets try using gobuster&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We get an interesting directory named &lt;strong&gt;internal&lt;/strong&gt; 
lets check it out&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So it allows us to upload files to the machine 
lets if we can access the files uploaded by us&lt;/p&gt;

&lt;p&gt;Searching for sub-directories inside &lt;code class=&quot;highlighter-rouge&quot;&gt;internal&lt;/code&gt; directory&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we got the uploads directory 
Lets check it out&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so I got my php rev shell listed so lets open up a netcat listner and get the rev-shell&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I got the user flag&lt;/p&gt;

&lt;p&gt;Lets search the suid binaries&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On searching for the suid binaries I came across &lt;strong&gt;systemctl&lt;/strong&gt; binary,It looked interesting 
On searching systemctl on gtfobins I got this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets try getting the root flag using this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_vulnuni/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So this was a very straight forward maching no need for any &lt;strong&gt;&lt;em&gt;crazy&lt;/em&gt;&lt;/strong&gt; things&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;center&gt;Keep Enumerating!!&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;
</description>
                <pubDate>Fri, 20 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-Vulversity</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-Vulversity</guid>
                
                <category>TryHackMe</category>
                
                <category>Port Knocking</category>
                
                <category>Forensics</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme Knock-Knock Walkthrough</title>
                <description>&lt;!--more--&gt;
&lt;p&gt;Nmap scan results show nothing peculiar to explain&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets visit the webpage and download the pcap&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;the above screenshot show the order in which port were knocked so lets use the port knocker &lt;a href=&quot;https://github.com/grongor/knock&quot;&gt;script&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now lets knock the ports in order shown and telnet the last port&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we get a hidden directory lets access the directory and download the 2nd pcap file&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On following one of the tcp streams in the pcap file I find this 
looks like some kind of foreign language&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It translates to 1 3 3 7 
so this must be the ports to knock&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we get another hidden directory so lets check it 
seem like base64 lets check&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So it gives us the ports to knock and then ssh&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we get the username password lets login&lt;/p&gt;

&lt;p&gt;but as soon as we login the system logs us out&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so lets try the same command with &lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/bash&lt;/code&gt; in additon to it as we get the shell&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets stabilise it using tty
and &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt; to check the permissions&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so the system name looked suspicious 
so I looked into it and found that the linux version is outdated and vulnerable so 
I checked for it online&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so we have to compile the code on the machine so I transferred the ofs.c to the box using scp and compiled it to get the binary and then ran it to get the root shell&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_knock/14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So nice box !
My first kernel exploit so it was great getting the root shell without any roadblocks&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;center&gt;Happy Hacking!!&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;
</description>
                <pubDate>Wed, 18 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-Knock-Knock</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-Knock-Knock</guid>
                
                <category>TryHackMe</category>
                
                <category>Port Knocking</category>
                
                <category>Forensics</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme Wgel Walkthrough</title>
                <description>&lt;!--more--&gt;
&lt;p&gt;Nmap Scan Results:-&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nothing interesting in the nmap scan lets check out the http page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On checking the source of index.html we get this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So Jessie is a user for this box
Nice ,A thing to &lt;strong&gt;remember&lt;/strong&gt;
Lets start with gobuster enumeration&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sitemap directory seems interesting
lets check it out&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Doesn’t give any special information 
so lets recursive scan into the sitemap directory&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Interesting!!&lt;/b&gt;
we find a .ssh directory 
On checking it out we get a rsa key
Lets check wether this key has any password or not??&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets quickly change the permissions of the rsa key and login!!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We get the user flag 
lets check &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt;
so we can run &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; as root nice checking for wget priv-esc we can easily find so many exploits
I used this –&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets HAck~~~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_wgel/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;SO that’s it we get the root flag as well
easy box nothing much to explain here!!&lt;br /&gt;
Remember always !!&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;center&gt;Enumeration Is The Key!!&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;
</description>
                <pubDate>Tue, 17 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-Wgel</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-Wgel</guid>
                
                <category>TryHackMe</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme Willow Walkthrough</title>
                <description>&lt;!--more--&gt;

&lt;p&gt;Lets start with the nmap scan on the machine we can see that three ports are open
namely ssh ,http ,nfs&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets checkout the http port we get this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets decode it using cyberchef&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so we are given the ssh login key in numerical form which can be converted to actual key if we know the private key and public exponent&lt;/p&gt;

&lt;p&gt;lets checkout the nfs port&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we get the private key and modulus&lt;/p&gt;

&lt;p&gt;so we can write a quick python script like this to get the ssh private key&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;61527&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;37627&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ssh_raw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;saving the key and brutforcing its password using ssh2john&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we get the password 
lets login!!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets copy the user.jpg to our local system&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;it contains our user flag&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets continue with further enumeration 
the command &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt; give us the following results&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we can use mount as root so we mount the &lt;code class=&quot;highlighter-rouge&quot;&gt;hidden_backup&lt;/code&gt; folder to &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt/creds&lt;/code&gt; directory and view the contents&lt;/p&gt;

&lt;p&gt;After priv-esc to root we check root.txt 
so it give us this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So it clocked that there maybe a file hidden in user.jpg image as said in root.txt so lets use the root password as passphrase and yup we got the flag&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_willow/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nice Box , Had lot of fun while figuring out the root flag&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;center&gt;Happy Hacking!!&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;
</description>
                <pubDate>Mon, 16 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-Willow</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-Willow</guid>
                
                <category>TryHackMe</category>
                
                <category>Forensics</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme Inclusion Walkthrough</title>
                <description>&lt;!--more--&gt;
&lt;p&gt;Basic nmap scan as always&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_inclusion/5.png&quot; alt=&quot;&quot; /&gt;
Open ports are 22,80
Nothing interesting here 
lets checkout the website&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_inclusion/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here lets checkout LFI-Attack because &lt;strong&gt;obviously&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_inclusion/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I think it is reading the lfiattack named file
so lets change the file to /etc/passwd&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_inclusion/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we get the credentials as a comment so lets 
login&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_inclusion/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so we got the user flag 
and we can run the socat as root
so lets checkout GTFObins for socat&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_inclusion/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets configure the env variable and keep the port listening on our machine&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_inclusion/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so on running the socat on our terminal I get the root terminal&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_inclusion/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we got the root on the machine and the flag&lt;/p&gt;

&lt;p&gt;That’s all and Remeber&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;center&gt;Enumeration Is The Key!!&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;
</description>
                <pubDate>Sun, 15 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-Inclusion</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-Inclusion</guid>
                
                <category>TryHackMe</category>
                
                <category>LFI</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme Madness Walkthrough</title>
                <description>&lt;!--more--&gt;

&lt;p&gt;First of all as we know its nmap scan as always&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so we have ports 22,80 open ;lets check the website&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we can see a not loadable image lets view that image&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets download and check its hex&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;as you can see why there is a png header in jpg image so lets repair and view the image&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we get a hidden directory lets acesss it&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets check the source&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so we have to brute-force the secret so I wrote a short python script to do this&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://10.10.188.51/th1s_1s_h1dd3n/?secret=&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;That is wrong!&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;correct secret :&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;this gave me the correct secret as 73&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried bruteforcing the ssh with hydra using the the string given above but it was already written above that this is not the username 
&lt;strong&gt;&lt;em&gt;such a fool&lt;/em&gt;&lt;/strong&gt;
so now I tried to steghide the image given on the challenge page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yupp this gave me the password without any passphrase&lt;/p&gt;

&lt;p&gt;So I tried to extract the thm.jpg file also without any passphrase
but did not get anything&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;now with the passphrase we got by entering the secret
it got me a username&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;but as it was given in the hint 
its ROTen so trying rot13 gives the user&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets login and get the user flag first&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now lets search for SUID binaries
we got this result&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now the screen-4.5.0 looks interesting 
Using my GOOGLE_FU skills I got this vulnerability&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets copy this script to /tmp directory and run it
we got the flag&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_madness/14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;center&gt;Happy Hacking!!&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;
</description>
                <pubDate>Sat, 14 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-Madness</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-Madness</guid>
                
                <category>TryHackMe</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme Mr Robot CTF Walkthrough</title>
                <description>&lt;!--more--&gt;
&lt;p&gt;So we start with basic enumeration&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So ports 80,443 is open nothing special here lets check the site&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;nothing to find here to lets check the robots.txt file&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;yup there is the first flag for us
lets get it 
&lt;img src=&quot;images/thm_mr_robot/15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;now we download the dictionary file 
running nikto&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nothing interesting here as well,now on running gobuster we got that it has Wordpress CMS so lets try for wp-login.php page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;yup its there lets check for username from the dictionary 
it was elliot kind of guessed it before&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;now using burp to capture the requests and use hydra&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since the dictionary had lot of duplicates I used used uniq command to make new dictionary so number of tries we have to do be less&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets login using the found pass we get the dashboard&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets check the editor ,we can edit the 404.php to get php rev-shell lets change the contents of 404.php and get the shell&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Stabilising the shell using python&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Couldn’t read the key but got the md5 hash of the user lets crack it online&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets login and get key 2&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;now checking for vulnerable binaries got nmap 
&lt;img src=&quot;images/thm_mr_robot/13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;using nmap –interactive to get the shell
as the nmap version being used is very old&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_mr_robot/14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;got the key 3 as well was a good box learnt about how to use nmap vulnerability&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;center&gt;Happy Hacking&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;
</description>
                <pubDate>Fri, 13 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-Mr-Robot-CTF</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-Mr-Robot-CTF</guid>
                
                <category>TryHackMe</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme BoilerCTF Walkthrough</title>
                <description>&lt;!--more--&gt;
&lt;p&gt;So I am back with another writup
this is the &lt;a href=&quot;https://tryhackme.com/room/boilerctf2&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I started with a quick scan with nmap and got this
&lt;img src=&quot;images/thm_boilerctf/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The ports open are &lt;strong&gt;21,80,10000&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So we checkout the http page on port 80&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It doesn’t contain anything useful lets check port 10000
it uses ssl so make sure to use &lt;strong&gt;https:&lt;/strong&gt; instead of &lt;strong&gt;http:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I searched for vulnerability related to this Webmin version But I didn’t find anthing useful so 
there is a question related to finding the service on the highest port so I ran a quick scan(it still took 10 mins) for the higher ports and found a port open&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On looking deeper into the port I find that ssh is running at this port so 
we have to find ssh creds&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I forgot to look at ftp port so lets see if anonymous login is possible&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;yes and we find a file lets read it ,It look like a caesar cipher using an online tool I got the message&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Very encouraging words in the message ,at this time I had no clue how to get the login creds so I ran the gobuster for hidden directories&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So the server is using  &lt;strong&gt;Joomla&lt;/strong&gt; CMS
Again running gobuster on the joomla directory&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Visiting some of the pages its some cipher its just there to troll me 
I was frustated to see the message I got after visiting some of the pages 
so I didn’t share the message in them&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On checking &lt;em&gt;_test&lt;/em&gt; i got the following page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;searching for vulnerablity related to it I got &lt;a href=&quot;https://www.exploit-db.com/exploits/47204&quot;&gt;this&lt;/a&gt;
So it seems that there is RCE in the url so lets see the log file if we can&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we find some creds&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;basterd:superduperp@$$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;lets login !!&lt;/p&gt;

&lt;p&gt;We can find the pass word for stoner&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets see what is there in stoner’s home directory
there is the user.txt flag for us but its name in the machine is secret&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets find the location of root.txt
we find the location at /root/root.txt&lt;/p&gt;

&lt;p&gt;lets try if we can exploit find first 
and we can so we use the following command to get the flag
&lt;code class=&quot;highlighter-rouge&quot;&gt;find / -exec cat /root/root.txt \;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;you will have to stop the command or it will continue till the infinity&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_boilerctf/17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So this is the final flag
Hope you learnt something! &lt;strong&gt;:)&lt;/strong&gt;&lt;/p&gt;
</description>
                <pubDate>Thu, 12 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-BoilerCTF-Walkthrough</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-BoilerCTF-Walkthrough</guid>
                
                <category>TryHackMe</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme OhSINT Walkthrough</title>
                <description>&lt;!--more--&gt;
&lt;p&gt;this is the writup for the &lt;a href=&quot;https://tryhackme.com/room/ohsint&quot;&gt;room&lt;/a&gt; on try hackme&lt;/p&gt;

&lt;p&gt;lets start !!
we are given with an image&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/WindowsXP.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets see what exiftool gives us&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we got a username - &lt;strong&gt;OWoodflint&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;lets search for it using sherlock.py and we got that there is a twitter account with this username&lt;/p&gt;

&lt;p&gt;lets search google with this username&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so there is a Wordpress blog as well lets checkout the twitter account first&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we get the answer to first question&lt;/p&gt;

&lt;p&gt;there is also a bssid mention by him in a tweet lets geolocate it
I found that &lt;a href=&quot;wigle.net&quot;&gt;this&lt;/a&gt; is useful&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we find that our target lives in London&lt;/p&gt;

&lt;p&gt;On infitely zooming in I find the ssid
its &lt;strong&gt;UnileverWifi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;after a lot of digging I could not find the email so I though of checking github as there might be some repo with the username and yes I got the email&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;for the 6th question its straight forward we can get it by looking at his blog&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;for the last question we had to find the password of the person so I searched his twitter account but got nothing so I looked deep into his blog and got the password in the source code&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_oshint/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and yup another room solved I found this quiet easy as it was basic recon but practice is always good :)&lt;/p&gt;

</description>
                <pubDate>Wed, 11 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-OhSINT</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-OhSINT</guid>
                
                <category>TryHackMe</category>
                
                <category>OSINT</category>
                
                
            </item>
        
            <item>
                <title>Try Hackme Advent of Cyber Day19 to Day24 Walkthrough</title>
                <description>&lt;!--more--&gt;
&lt;p&gt;So this is last part of the writup of the 25-day series
Hope you learnt something till now!!!&lt;/p&gt;

&lt;h2 id=&quot;day19task-24&quot;&gt;Day19(Task 24)&lt;/h2&gt;

&lt;p&gt;this is a LFI task 
just like we have done in previous task 
so I ran the whoami command and got the response shown below&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/82.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we are root so lets find where the user.txt file is located note that we have to url encode the command we are going to execute so I used the find command to find the location&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/80.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;now just simply reading out the user.txt file 
I know that the task was to spawn a revershell using the lfi but I was lazy enough to not do that and find the other way&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/81.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;day20task-25&quot;&gt;Day20(Task 25)&lt;/h2&gt;

&lt;p&gt;We are given with an IP let’s start with the basic nmap scan&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/83.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we got the answer to the first question now lets use hydra to bruteforce the user &lt;strong&gt;sam&lt;/strong&gt; password&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/84.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;found the password now logging into the machine using ssh and reading the first flag&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/85.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;the second part was a cronjob escalation which is kind of easy if you understood the previous challenges carefully&lt;/p&gt;

&lt;p&gt;so I am not solving the last part&lt;/p&gt;

&lt;h2 id=&quot;day21task-26&quot;&gt;Day21(Task 26)&lt;/h2&gt;

&lt;p&gt;This is a reversing engineering task 
I am complete noob in this fields so I read about tons of blogs to get started on this
lets begin with analysing the binary with r2 using following command&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;r2 -d &amp;lt;file-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;now we start auto-analysing the binary with the command &lt;strong&gt;&lt;em&gt;aaaa&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now search for the main function as referred in the helping material using&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;afl |grep &quot;main&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/86.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;now to view the disassembled assembly code for main function we use
&lt;code class=&quot;highlighter-rouge&quot;&gt;pdf @main&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/87.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;here we can see the disassembled code and I don’t need to explain you in detail all of the things are given in helping material&lt;/p&gt;

&lt;p&gt;now lets add breakpoints  by using following commands&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;db &amp;lt;address&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to add a breakpoint&lt;/p&gt;

&lt;p&gt;then we use the commands to control the execution flow
&lt;strong&gt;dc&lt;/strong&gt;- continue exection 
&lt;strong&gt;ds&lt;/strong&gt;- go one step ahead into the program flow&lt;/p&gt;

&lt;p&gt;you can see the breakpoints i added&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/88.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;now checking the value of var_ch at intialization
we see that the value of var_ch is still not initialised so we step one instruction further and view its value by using &lt;code class=&quot;highlighter-rouge&quot;&gt;px @&amp;lt;location&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/89.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We got the answer to first question now continuing
now we have to check the values of the register so we use &lt;code class=&quot;highlighter-rouge&quot;&gt;dr&lt;/code&gt; command&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/90.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We got the answer to the second question as well so lets continue
now we to check the value of &lt;em&gt;var_4h&lt;/em&gt; before the eax register has 0 assigned to it&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/91.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we get the answer to the third question as well 
That’s all for this task&lt;/p&gt;

&lt;h2 id=&quot;day22task-27&quot;&gt;Day22(Task 27)&lt;/h2&gt;

&lt;p&gt;This is also a reversing task but this is used to explain the implementation of the conditional statements in the assembly code&lt;/p&gt;

&lt;p&gt;lets view the decompiled code of the main function&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/92.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;the C language equivalent code would be something like this&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;from the above code we can easily answer the questions asked in the task&lt;/p&gt;

&lt;h2 id=&quot;day23task-28&quot;&gt;Day23(Task 28)&lt;/h2&gt;

&lt;p&gt;So this a SQL-injection task
And I have previously used the sqlmap tool in previous task so I dont need to explain it again&lt;/p&gt;

&lt;p&gt;lets take al look at the website,just a basic login form&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/93.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets start up burp and capture the request to be supplied to splmap
and check for the databases present with sqlmap&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/94.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so the database name is &lt;strong&gt;social&lt;/strong&gt; and lets check for tables&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/95.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so looks like the table is &lt;strong&gt;users&lt;/strong&gt; so lets dump the data present in the table&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/96.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so we got the email for santa claus ie &lt;strong&gt;bigman@shefesh.com&lt;/strong&gt;and the password as md5 hash so lets crack it online&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/97.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets login into the website
we can easily view the conversation between santa and Mommy Mistletoe&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/98.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;to get a shell we have to upload php revshell to the site 
so we can post the php file to website but we cant upload it directly as it restricts it so we rename the file as .phtml and it lets us upload it and simultaneously start a listner at the port specified in the file&lt;/p&gt;

&lt;p&gt;so we get a shell and access the flag&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/99.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;day24task-29&quot;&gt;Day24(Task 29)&lt;/h2&gt;

&lt;p&gt;lets start with an nmap scan&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/100.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so lets checkout the 9200 port elastiseach service 
i got a useful &lt;a href=&quot;https://logz.io/blog/elasticsearch-queries/&quot;&gt;article&lt;/a&gt; on same&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/101.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets checkout the port 8000
its turns out to be a logfile so lets take a look at it&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/102.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so it seems that there seems to be a server running at 5601
so lets verify it with nmap and it seems to be true&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/103.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets visit the port&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/104.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;lets search for the kibana version number&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/105.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On search about vulnerablities related to this version i found &lt;a href=&quot;https://www.cvedetails.com/cve/CVE-2018-17246/&quot;&gt;this&lt;/a&gt; and also &lt;a href=&quot;https://www.cyberark.com/threat-research-blog/execute-this-i-know-you-have-it/&quot;&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;lets try it&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/106.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we can see the contents of /etc/passwd in the log file&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/107.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so lets try to view the root.txt file&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/thm_advent/108.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hurray we got the flag lets submit it and I completed the 25 day series
This series was very interesting and got to learn a lot&lt;/p&gt;

&lt;p&gt;Day 25 has &lt;strong&gt;no task&lt;/strong&gt; so this ends the writup&lt;/p&gt;

</description>
                <pubDate>Tue, 10 Mar 2020 00:00:00 +0530</pubDate>
                <link>http://localhost:4000/Try-Hack-Me-Advent-Of-Cyber-Day19_to_Day24</link>
                <guid isPermaLink="true">http://localhost:4000/Try-Hack-Me-Advent-Of-Cyber-Day19_to_Day24</guid>
                
                <category>TryHackMe</category>
                
                <category>Advent_Of_Cyber</category>
                
                
            </item>
        
    </channel>
</rss>